#!/usr/bin/env ruby

require_relative '../lib/piwigo_client'

require 'optparse'

options = {}

if File.exist?('.piwigo.conf')
  begin
    options = JSON.parse(File.read('.piwigo.conf'))
  rescue JSON::ParserError
    puts "Error reading .piwigo.conf; is it a JSON file?"
  end
end

parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options]"
  opts.on('-b', '--base_uri HOSTNAME', 'Hostname of Piwigo server (required)') do |o|
    options['base_uri'] = o
  end
  opts.on('-u', '--username USERNAME', 'Username (required)') { |u| options['username'] = u }
  opts.on('-p', '--password PASSWORD', 'Password (required)') { |p| options['password'] = p }

  opts.on('-h', '--help', 'Prints this help') do
    puts opts
    puts
    puts 'Options will also be read from .piwigo.conf (in JSON format) if it exists in the' \
      ' current directory.'
    exit
  end
end

parser.parse!

unless options['base_uri'] && options['username'] && options['password']
  puts parser
  exit
end

def print_categories(cats, level = 0)
  return unless cats
  cats.each do |cat|
    print '  ' * level
    puts "(#{cat['id']}) #{cat['name']}"
    print_categories(cat['sub_categories'], level + 1)
  end
end

client = PiwigoClient.new(base_uri: options['base_uri'], username: options['username'],
  password: options['password'])
client.login

print_categories(client.get_categories)

client.logout
